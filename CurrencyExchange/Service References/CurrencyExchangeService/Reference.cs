//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CurrencyExchange.CurrencyExchangeService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CurrencyExchangeService.ICurrencyService")]
    public interface ICurrencyService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICurrencyService/ConvertCurrency", ReplyAction="http://tempuri.org/ICurrencyService/ConvertCurrencyResponse")]
        double ConvertCurrency(string ISO, double value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICurrencyService/ConvertCurrency", ReplyAction="http://tempuri.org/ICurrencyService/ConvertCurrencyResponse")]
        System.Threading.Tasks.Task<double> ConvertCurrencyAsync(string ISO, double value);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICurrencyServiceChannel : CurrencyExchange.CurrencyExchangeService.ICurrencyService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CurrencyServiceClient : System.ServiceModel.ClientBase<CurrencyExchange.CurrencyExchangeService.ICurrencyService>, CurrencyExchange.CurrencyExchangeService.ICurrencyService {
        
        public CurrencyServiceClient() {
        }
        
        public CurrencyServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CurrencyServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CurrencyServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CurrencyServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double ConvertCurrency(string ISO, double value) {
            return base.Channel.ConvertCurrency(ISO, value);
        }
        
        public System.Threading.Tasks.Task<double> ConvertCurrencyAsync(string ISO, double value) {
            return base.Channel.ConvertCurrencyAsync(ISO, value);
        }
    }
}
